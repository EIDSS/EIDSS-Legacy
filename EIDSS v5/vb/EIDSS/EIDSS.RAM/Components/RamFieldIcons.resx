<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="m_InternalImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="m_InternalImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAM
        DgAAAk1TRnQBSQFMAgEBBgEAAQkBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGGMAAc8BqwGwAcABDQEkAb8BAAEZAb8BAAEZAckBaQF2sQABxQFCAVMBxQFC
        AVMB0gHGAcgByQFpAXYBvwEAARmxAAHIAV0BawHNAZEBmQMAAdIBxgHIAb8BAAEZdQABkQGeAZEDqz8A
        AckBaQF2AcABDQEkcgABqwGzAasBAQFlAQEBKQFwASkDxiEAAQ4BfwIOAX8CDgF/Ag4BfwIOAX8BDgkA
        Ab8BAAEZAb8BAAEZAcwBhAGNbwADuQEOAXUBDgECAYABAQECAYABAQE2AXUBNiEAASYBiQEmAXABqQFw
        EgAB0gHGAcgByQFpAXYBwAENASRsAAPGASoBgAEpAQIBjAEBAQIBegEBAQIBgwEBAQIBjAEBAVABhAFQ
        HgABrgHDAa4BGgGEARoBWAGeAVgJAAG/AQABGQHMAYQBjQMAAc4BngGkAb8BAAEZbAABUAGJAVABAwGY
        AQEBAwGYAQEBagGPAWoBKgF9ASkBAwGYAQEBAwGPAQEBhQGhAYQUAAG4CQABrgHDAa4BGgGEARoBWAGe
        AVgGAAHEATUBSAHEATUBSAMAAckBaQF2AcABDQEkaQABdwGVAXYBBAGlAQABBAGlAQABUAGLAU8DAAPG
        AR0BiwEaAQQBpQEAAQQBmwEAAZ4BqQGeEQABuAwAAZUBuQGVAQ4BfwEOBgAB0gHGAcgBxAE1AUgBwwEo
        ATwBwQEaATABzwGrAbBpAAPGASsBlgEoASsBlgEoA8YGAAGrAbYBqwERAZwBDQEFAbEBAAERAZ0BDQGr
        AbYBqw4AAbgGAAE/AZQBPwYAAQ4BfwEOgQAGxgwAAZ4BqgGeAQUBsQEAAQYBvgEAAR0BkQEaA8YLAAG4
        BgABDgF/AQ4BxwHOAccDAAEOAX8BDpYAAYUBqQGEAQYBvQEAAVEBmgFPDgABuAYAAT8BlAE/ATMBjwEz
        AUwBmQFMASYBiQEmmQABdwGeAXYDxggAAbgCAAG4AgABuAYAAccBzgHHAXwBrgF8AXABqQFwAbsByQG7
        pQAChAHJAgABuAIAAbi6AAJpAcUCAAG4ugACxgHSAgABuIcAAigB2wwAAkIB2gKEAdcPAAG/AQABGQG/
        AQABGQG/AQABGQG/AQABGSEAAc8BqwGwAcABDQEkAb8BAAEZAb8BAAEZAckBaQF2CQABrQGgAYoBrQGg
        AYoBrQGgAYoBrQGgAYoBrQGgAYoBrQGgAYoBrQGgAYoBrQGgAYoBrQGgAYoBrQGgAYoBrQGgAYoBrQGg
        AYozAAINAdwCuQHVBgACxgHUAgAB3QLGAdQMAAG/AQABGQG/AQABGSoAAcUBQgFTAcUBQgFTAdIBxgHI
        AckBaQF2Ab8BAAEZCQABrQGgAYoB/wH9AfoB/wH9AfkB/wH8AfcB/wH8AfYB/wH8AfUB/wH7AfQB/wH7
        AfIB/wH7AfEB/wH7AfAB6wHkAdYBrQGgAYozAAJCAdoCdgHXBgAChAHXAjUB2w8AAb8BAAEZLQAByAFd
        AWsBzQGRAZkDAAHSAcYByAG/AQABGQkAAa0BoAGKAf8B/QH6Af8B/QH5Af8B/AH3AYABfgF7Ab8BvQG4
        Af8B+wH0Af8B+wHyAf8B+wHxAf8B+wHwAesB5AHWAa0BoAGKMwAChAHXAgIB3QIKAdsCCgHbAgMB3AJ2
        AdcPAAG/AQABGTYAAckBaQF2AcABDQEkCQABrQGgAYoB/wH9AfoB/wH9AfkB/wH8AfcBvwG9AbkBgAF+
        AXoB/wH7AfQB/wH7AfIB/wH7AfEB/wH7AfAB6wHkAdYBrQGgAYoYAAGRAZ4BkQOrFQACxgHUAgAB3QK5
        AdUCxgHUAgAB3QK5AdUPAAG/AQABGRsAAQ4BfwIOAX8CDgF/Ag4BfwIOAX8BDgkAAb8BAAEZAb8BAAEZ
        AcwBhAGNCQABrQGgAYoB/wH9AfoB/wH9AfkB/wH8AfcB/wH8AfYBYAFfAVwB/wH7AfQB/wH7AfIB/wH7
        AfEB/wH7AfAB6wHkAdYBrQGgAYoVAAGrAbMBqwEBAWUBAQEpAXABKQPGFQACQgHaAnYB1wKEAdcCKAHb
        EgABvwEAARkbAAEmAYkBJgFwAakBcBIAAdIBxgHIAckBaQF2AcABDQEkCQABrQGgAYoB/wH9AfoB/wH9
        AfkB/wH8AfcB/wH8AfYBYAFfAVwB3wHcAdUB/wH7AfIB/wH7AfEB/wH7AfAB6wHkAdYBrQGgAYoSAAO5
        AQ4BdQEOAQIBgAEBAQIBgAEBATYBdQE2FQAChAHXAjUB2wJCAdoCdgHXEgABvwEAARkBvwEAARkYAAGu
        AcMBrgEaAYQBGgFYAZ4BWAkAAb8BAAEZAcwBhAGNAwABzgGeAaQBvwEAARkJAAGtAaABigH/Af0B+gH/
        Af0B+QH/AfwB9wH/AfwB9gHfAd0B1gFwAW4BagH/AfsB8gH/AfsB8QH/AfsB8AHrAeQB1gGtAaABig8A
        A8YBKgGAASkBAgGMAQEBAgF6AQEBAgGDAQEBAgGMAQEBUAGEAVASAALGAdQCAAHdAg0B3AK5AdUVAAG/
        AQABGQG/AQABGQG/AQABGQG/AQABGQgAAbgJAAGuAcMBrgEaAYQBGgFYAZ4BWAYAAcQBNQFIAcQBNQFI
        AwAByQFpAXYBwAENASQJAAGtAaABigH/Af0B+gH/Af0B+QH/AfwB9wH/AfwB9gH/AfwB9QGfAZ0BmAG/
        AbwBtgH/AfsB8QH/AfsB8AHrAeQB1gGtAaABig8AAVABiQFQAQMBmAEBAQMBmAEBAWoBjwFqASoBfQEp
        AQMBmAEBAQMBjwEBAYUBoQGEEgACQgHaAigB2wYAAQ4BfwIOAX8CDgF/Ag4BfwIOAX8BDhcAAbgMAAGV
        AbkBlQEOAX8BDgYAAdIBxgHIAcQBNQFIAcMBKAE8AcEBGgEwAc8BqwGwCQABrQGgAYoB/wH9AfoB/wH9
        AfkBnwGeAZsBQAE/AT4BQAE/AT0BQAE/AT0BcAFuAWoB/wH7AfEB/wH7AfAB6wHkAdYBrQGgAYoMAAF3
        AZUBdgEEAaUBAAEEAaUBAAFQAYsBTwMAA8YBHQGLARoBBAGlAQABBAGbAQABngGpAZ4PAAK5AdUCuQHV
        BgABDgF/AQ4JAAEOAX8BDhcAAbgGAAE/AZQBPwYAAQ4BfwEOHgABrQGgAYoB/wH9AfoB/wH9AfkB/wH8
        AfcB/wH8AfYB/wH8AfUB/wH7AfQB/wH7AfIB/wH7AfEB/wH7AfAB6wHkAdYBrQGgAYoMAAPGASsBlgEo
        ASsBlgEoA8YGAAGrAbYBqwERAZwBDQEFAbEBAAERAZ0BDQGrAbYBqxgAAQ4BfwEOCQABDgF/AQ4XAAG4
        BgABDgF/AQ4BxwHOAccDAAEOAX8BDh4AAa0BoAGKAf8B/QH6Af8B/QH5Af8B/AH3Af8B/AH2Af8B/AH1
        Af8B+wH0Af8B+wHyAf8B+wHxAf8B+wHwAesB5AHWAa0BoAGKDwAGxgwAAZ4BqgGeAQUBsQEAAQYBvgEA
        AR0BkQEaA8YVAAEOAX8BDgkAAQ4BfwEOFwABuAYAAT8BlAE/ATMBjwEzAUwBmQFMASYBiQEmHgACCQGO
        AgkBjgIJAY4CCQGOAgkBjgIJAY4CCQGOAgkBjgIJAY4CCQGOAgkBjgIJAY4kAAGFAakBhAEGAb0BAAFR
        AZoBTxgAAQ4BfwIOAX8CDgF/Ag4BfwIOAX8BDhEAAbgCAAG4AgABuAYAAccBzgHHAXwBrgF8AXABqQFw
        AbsByQG7HgACCQGOARMBDAG5A/8BFgEOAcgG/wEWAQ4ByAP/ARYBDgHIA/8BEwEMAbkCCQGOJwABdwGe
        AXYDxhgAAQ4BfwEOBgABDgF/AQ4SAAKEAckCAAG4AgABuDAAAgkBjgEWAQ4ByAP/ARoBDwHbBv8BGgEP
        AdsD/wEaAQ8B2wP/ARYBDgHIAgkBjkUAAQ4BfwEOBgABDgF/AQ4VAAJpAcUCAAG4MAACCQGOARMBDAG5
        A/8BFgEOAcgG/wEWAQ4ByAP/ARYBDgHIA/8BEwEMAbkCCQGORQABDgF/Ag4BfwIOAX8CDgF/AQ4VAALG
        AdICAAG4MAACCQGOAgkBjgIJAY4CCQGOAgkBjgIJAY4CCQGOAgkBjgIJAY4CCQGOAgkBjgIJAY4zAAFC
        AU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/AQAD/wHgBAAD/wHgBAAD/wHkBAAB/gF/
        Af8B/AQAAfwBPwH4ATgEAAH4AT8B+QH4BAAB8AEfAfgB5AQAAfABDwHcAWQEAAHhAQcB3gFgBAAB4QGD
        AdsBfwQAAfMBwQHZAX8EAAH/AeMB2AF/BAAB/wHzARgBfwQAAv8BHwH/BAAC/wGfAf8EAAL/AZ8B/wQA
        AXkB8AH/AuABAQL/ATEB5wH/AuABAQL/ATMB7wH/AeQB4AEBAv8BAwHvAf8B/AHgAQEB/gF/AQMB7wH4
        ATgB4AEBAfwBPwGHAe8B+QH4AeABAQH4AT8BhwHnAfgB5AHgAQEB8AEfAYcB8AHcAWQB4AEBAfABDwHM
        AR8B3gFgAeABAQHhAQcBzQHfAdsBfwHgAQEB4QGDAf0B3wHZAX8B4AEBAfMBwQH9Ad8B2AF/AeABAQH/
        AeMB/AEfARgBfwHgAQEB/wHzAf0BvwEfAf8B4AEBAv8B/QG/AZ8B/wHgAQEC/wH8AT8BnwH/AeABAQL/
        Cw==
</value>
  </data>
</root>