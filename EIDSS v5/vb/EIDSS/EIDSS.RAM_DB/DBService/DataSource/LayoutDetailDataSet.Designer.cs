//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EIDSS.RAM_DB.DBService.DataSource {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LayoutDetailDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LayoutDetailDataSet : global::System.Data.DataSet {
        
        private LayoutDataTable tableLayout;
        
        private AggregateDataTable tableAggregate;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LayoutDetailDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LayoutDetailDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Layout"] != null)) {
                    base.Tables.Add(new LayoutDataTable(ds.Tables["Layout"]));
                }
                if ((ds.Tables["Aggregate"] != null)) {
                    base.Tables.Add(new AggregateDataTable(ds.Tables["Aggregate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LayoutDataTable Layout {
            get {
                return this.tableLayout;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AggregateDataTable Aggregate {
            get {
                return this.tableAggregate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LayoutDetailDataSet cln = ((LayoutDetailDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Layout"] != null)) {
                    base.Tables.Add(new LayoutDataTable(ds.Tables["Layout"]));
                }
                if ((ds.Tables["Aggregate"] != null)) {
                    base.Tables.Add(new AggregateDataTable(ds.Tables["Aggregate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableLayout = ((LayoutDataTable)(base.Tables["Layout"]));
            if ((initTable == true)) {
                if ((this.tableLayout != null)) {
                    this.tableLayout.InitVars();
                }
            }
            this.tableAggregate = ((AggregateDataTable)(base.Tables["Aggregate"]));
            if ((initTable == true)) {
                if ((this.tableAggregate != null)) {
                    this.tableAggregate.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LayoutDetailDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LayoutDetailDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLayout = new LayoutDataTable();
            base.Tables.Add(this.tableLayout);
            this.tableAggregate = new AggregateDataTable();
            base.Tables.Add(this.tableAggregate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLayout() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAggregate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LayoutDetailDataSet ds = new LayoutDetailDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LayoutRowChangeEventHandler(object sender, LayoutRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AggregateRowChangeEventHandler(object sender, AggregateRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LayoutDataTable : global::System.Data.TypedTableBase<LayoutRow> {
            
            private global::System.Data.DataColumn columnidflLayout;
            
            private global::System.Data.DataColumn columnstrLayoutName;
            
            private global::System.Data.DataColumn columnstrDefaultLayoutName;
            
            private global::System.Data.DataColumn columnidflPivotName;
            
            private global::System.Data.DataColumn columnstrPivotName;
            
            private global::System.Data.DataColumn columnidflDescription;
            
            private global::System.Data.DataColumn columnstrDescription;
            
            private global::System.Data.DataColumn columnidflQuery;
            
            private global::System.Data.DataColumn columnidflLayoutFolder;
            
            private global::System.Data.DataColumn columnidfUserID;
            
            private global::System.Data.DataColumn columnstrBasicXml;
            
            private global::System.Data.DataColumn columnblbZippedBasicXml;
            
            private global::System.Data.DataColumn columnblnReadOnly;
            
            private global::System.Data.DataColumn columnidflMapName;
            
            private global::System.Data.DataColumn columnstrMapName;
            
            private global::System.Data.DataColumn columnidflChartName;
            
            private global::System.Data.DataColumn columnstrChartName;
            
            private global::System.Data.DataColumn columnidfsGroupInterval;
            
            private global::System.Data.DataColumn columnstrGroupIntervalName;
            
            private global::System.Data.DataColumn columnidfsChartType;
            
            private global::System.Data.DataColumn columnstrChartTypeName;
            
            private global::System.Data.DataColumn columnblnShowColsTotals;
            
            private global::System.Data.DataColumn columnblnShowRowsTotals;
            
            private global::System.Data.DataColumn columnblnShowColGrandTotals;
            
            private global::System.Data.DataColumn columnblnShowRowGrandTotals;
            
            private global::System.Data.DataColumn columnblnShowForSingleTotals;
            
            private global::System.Data.DataColumn columnblnApplyFilter;
            
            private global::System.Data.DataColumn columnblnShareLayout;
            
            private global::System.Data.DataColumn columnblnPivotAxis;
            
            private global::System.Data.DataColumn columnblnShowXLabels;
            
            private global::System.Data.DataColumn columnblnShowPointLabels;
            
            private global::System.Data.DataColumn columnstrGisLayerSettings;
            
            private global::System.Data.DataColumn columnblbGisLayerSettings;
            
            private global::System.Data.DataColumn columnstrGisMapSettings;
            
            private global::System.Data.DataColumn columnblbGisZippedMapSettings;
            
            private global::System.Data.DataColumn columnintGisLayerPosition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LayoutDataTable() {
                this.TableName = "Layout";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LayoutDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LayoutDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idflLayoutColumn {
                get {
                    return this.columnidflLayout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLayoutNameColumn {
                get {
                    return this.columnstrLayoutName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDefaultLayoutNameColumn {
                get {
                    return this.columnstrDefaultLayoutName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idflPivotNameColumn {
                get {
                    return this.columnidflPivotName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPivotNameColumn {
                get {
                    return this.columnstrPivotName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idflDescriptionColumn {
                get {
                    return this.columnidflDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDescriptionColumn {
                get {
                    return this.columnstrDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idflQueryColumn {
                get {
                    return this.columnidflQuery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idflLayoutFolderColumn {
                get {
                    return this.columnidflLayoutFolder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfUserIDColumn {
                get {
                    return this.columnidfUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBasicXmlColumn {
                get {
                    return this.columnstrBasicXml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blbZippedBasicXmlColumn {
                get {
                    return this.columnblbZippedBasicXml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnReadOnlyColumn {
                get {
                    return this.columnblnReadOnly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idflMapNameColumn {
                get {
                    return this.columnidflMapName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strMapNameColumn {
                get {
                    return this.columnstrMapName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idflChartNameColumn {
                get {
                    return this.columnidflChartName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strChartNameColumn {
                get {
                    return this.columnstrChartName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsGroupIntervalColumn {
                get {
                    return this.columnidfsGroupInterval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strGroupIntervalNameColumn {
                get {
                    return this.columnstrGroupIntervalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsChartTypeColumn {
                get {
                    return this.columnidfsChartType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strChartTypeNameColumn {
                get {
                    return this.columnstrChartTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnShowColsTotalsColumn {
                get {
                    return this.columnblnShowColsTotals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnShowRowsTotalsColumn {
                get {
                    return this.columnblnShowRowsTotals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnShowColGrandTotalsColumn {
                get {
                    return this.columnblnShowColGrandTotals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnShowRowGrandTotalsColumn {
                get {
                    return this.columnblnShowRowGrandTotals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnShowForSingleTotalsColumn {
                get {
                    return this.columnblnShowForSingleTotals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnApplyFilterColumn {
                get {
                    return this.columnblnApplyFilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnShareLayoutColumn {
                get {
                    return this.columnblnShareLayout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnPivotAxisColumn {
                get {
                    return this.columnblnPivotAxis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnShowXLabelsColumn {
                get {
                    return this.columnblnShowXLabels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blnShowPointLabelsColumn {
                get {
                    return this.columnblnShowPointLabels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strGisLayerSettingsColumn {
                get {
                    return this.columnstrGisLayerSettings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blbGisLayerSettingsColumn {
                get {
                    return this.columnblbGisLayerSettings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strGisMapSettingsColumn {
                get {
                    return this.columnstrGisMapSettings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn blbGisZippedMapSettingsColumn {
                get {
                    return this.columnblbGisZippedMapSettings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intGisLayerPositionColumn {
                get {
                    return this.columnintGisLayerPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LayoutRow this[int index] {
                get {
                    return ((LayoutRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LayoutRowChangeEventHandler LayoutRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LayoutRowChangeEventHandler LayoutRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LayoutRowChangeEventHandler LayoutRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LayoutRowChangeEventHandler LayoutRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLayoutRow(LayoutRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LayoutRow AddLayoutRow(
                        long idflLayout, 
                        string strLayoutName, 
                        string strDefaultLayoutName, 
                        long idflPivotName, 
                        string strPivotName, 
                        long idflDescription, 
                        string strDescription, 
                        long idflQuery, 
                        long idflLayoutFolder, 
                        long idfUserID, 
                        string strBasicXml, 
                        byte[] blbZippedBasicXml, 
                        bool blnReadOnly, 
                        long idflMapName, 
                        string strMapName, 
                        long idflChartName, 
                        string strChartName, 
                        long idfsGroupInterval, 
                        string strGroupIntervalName, 
                        long idfsChartType, 
                        string strChartTypeName, 
                        bool blnShowColsTotals, 
                        bool blnShowRowsTotals, 
                        bool blnShowColGrandTotals, 
                        bool blnShowRowGrandTotals, 
                        bool blnShowForSingleTotals, 
                        bool blnApplyFilter, 
                        bool blnShareLayout, 
                        bool blnPivotAxis, 
                        bool blnShowXLabels, 
                        bool blnShowPointLabels, 
                        string strGisLayerSettings, 
                        byte[] blbGisLayerSettings, 
                        string strGisMapSettings, 
                        byte[] blbGisZippedMapSettings, 
                        int intGisLayerPosition) {
                LayoutRow rowLayoutRow = ((LayoutRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idflLayout,
                        strLayoutName,
                        strDefaultLayoutName,
                        idflPivotName,
                        strPivotName,
                        idflDescription,
                        strDescription,
                        idflQuery,
                        idflLayoutFolder,
                        idfUserID,
                        strBasicXml,
                        blbZippedBasicXml,
                        blnReadOnly,
                        idflMapName,
                        strMapName,
                        idflChartName,
                        strChartName,
                        idfsGroupInterval,
                        strGroupIntervalName,
                        idfsChartType,
                        strChartTypeName,
                        blnShowColsTotals,
                        blnShowRowsTotals,
                        blnShowColGrandTotals,
                        blnShowRowGrandTotals,
                        blnShowForSingleTotals,
                        blnApplyFilter,
                        blnShareLayout,
                        blnPivotAxis,
                        blnShowXLabels,
                        blnShowPointLabels,
                        strGisLayerSettings,
                        blbGisLayerSettings,
                        strGisMapSettings,
                        blbGisZippedMapSettings,
                        intGisLayerPosition};
                rowLayoutRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLayoutRow);
                return rowLayoutRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LayoutRow FindByidflLayout(long idflLayout) {
                return ((LayoutRow)(this.Rows.Find(new object[] {
                            idflLayout})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LayoutDataTable cln = ((LayoutDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LayoutDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnidflLayout = base.Columns["idflLayout"];
                this.columnstrLayoutName = base.Columns["strLayoutName"];
                this.columnstrDefaultLayoutName = base.Columns["strDefaultLayoutName"];
                this.columnidflPivotName = base.Columns["idflPivotName"];
                this.columnstrPivotName = base.Columns["strPivotName"];
                this.columnidflDescription = base.Columns["idflDescription"];
                this.columnstrDescription = base.Columns["strDescription"];
                this.columnidflQuery = base.Columns["idflQuery"];
                this.columnidflLayoutFolder = base.Columns["idflLayoutFolder"];
                this.columnidfUserID = base.Columns["idfUserID"];
                this.columnstrBasicXml = base.Columns["strBasicXml"];
                this.columnblbZippedBasicXml = base.Columns["blbZippedBasicXml"];
                this.columnblnReadOnly = base.Columns["blnReadOnly"];
                this.columnidflMapName = base.Columns["idflMapName"];
                this.columnstrMapName = base.Columns["strMapName"];
                this.columnidflChartName = base.Columns["idflChartName"];
                this.columnstrChartName = base.Columns["strChartName"];
                this.columnidfsGroupInterval = base.Columns["idfsGroupInterval"];
                this.columnstrGroupIntervalName = base.Columns["strGroupIntervalName"];
                this.columnidfsChartType = base.Columns["idfsChartType"];
                this.columnstrChartTypeName = base.Columns["strChartTypeName"];
                this.columnblnShowColsTotals = base.Columns["blnShowColsTotals"];
                this.columnblnShowRowsTotals = base.Columns["blnShowRowsTotals"];
                this.columnblnShowColGrandTotals = base.Columns["blnShowColGrandTotals"];
                this.columnblnShowRowGrandTotals = base.Columns["blnShowRowGrandTotals"];
                this.columnblnShowForSingleTotals = base.Columns["blnShowForSingleTotals"];
                this.columnblnApplyFilter = base.Columns["blnApplyFilter"];
                this.columnblnShareLayout = base.Columns["blnShareLayout"];
                this.columnblnPivotAxis = base.Columns["blnPivotAxis"];
                this.columnblnShowXLabels = base.Columns["blnShowXLabels"];
                this.columnblnShowPointLabels = base.Columns["blnShowPointLabels"];
                this.columnstrGisLayerSettings = base.Columns["strGisLayerSettings"];
                this.columnblbGisLayerSettings = base.Columns["blbGisLayerSettings"];
                this.columnstrGisMapSettings = base.Columns["strGisMapSettings"];
                this.columnblbGisZippedMapSettings = base.Columns["blbGisZippedMapSettings"];
                this.columnintGisLayerPosition = base.Columns["intGisLayerPosition"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnidflLayout = new global::System.Data.DataColumn("idflLayout", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidflLayout);
                this.columnstrLayoutName = new global::System.Data.DataColumn("strLayoutName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLayoutName);
                this.columnstrDefaultLayoutName = new global::System.Data.DataColumn("strDefaultLayoutName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDefaultLayoutName);
                this.columnidflPivotName = new global::System.Data.DataColumn("idflPivotName", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidflPivotName);
                this.columnstrPivotName = new global::System.Data.DataColumn("strPivotName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPivotName);
                this.columnidflDescription = new global::System.Data.DataColumn("idflDescription", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidflDescription);
                this.columnstrDescription = new global::System.Data.DataColumn("strDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDescription);
                this.columnidflQuery = new global::System.Data.DataColumn("idflQuery", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidflQuery);
                this.columnidflLayoutFolder = new global::System.Data.DataColumn("idflLayoutFolder", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidflLayoutFolder);
                this.columnidfUserID = new global::System.Data.DataColumn("idfUserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfUserID);
                this.columnstrBasicXml = new global::System.Data.DataColumn("strBasicXml", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBasicXml);
                this.columnblbZippedBasicXml = new global::System.Data.DataColumn("blbZippedBasicXml", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblbZippedBasicXml);
                this.columnblnReadOnly = new global::System.Data.DataColumn("blnReadOnly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnReadOnly);
                this.columnidflMapName = new global::System.Data.DataColumn("idflMapName", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidflMapName);
                this.columnstrMapName = new global::System.Data.DataColumn("strMapName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrMapName);
                this.columnidflChartName = new global::System.Data.DataColumn("idflChartName", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidflChartName);
                this.columnstrChartName = new global::System.Data.DataColumn("strChartName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrChartName);
                this.columnidfsGroupInterval = new global::System.Data.DataColumn("idfsGroupInterval", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsGroupInterval);
                this.columnstrGroupIntervalName = new global::System.Data.DataColumn("strGroupIntervalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrGroupIntervalName);
                this.columnidfsChartType = new global::System.Data.DataColumn("idfsChartType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsChartType);
                this.columnstrChartTypeName = new global::System.Data.DataColumn("strChartTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrChartTypeName);
                this.columnblnShowColsTotals = new global::System.Data.DataColumn("blnShowColsTotals", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnShowColsTotals);
                this.columnblnShowRowsTotals = new global::System.Data.DataColumn("blnShowRowsTotals", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnShowRowsTotals);
                this.columnblnShowColGrandTotals = new global::System.Data.DataColumn("blnShowColGrandTotals", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnShowColGrandTotals);
                this.columnblnShowRowGrandTotals = new global::System.Data.DataColumn("blnShowRowGrandTotals", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnShowRowGrandTotals);
                this.columnblnShowForSingleTotals = new global::System.Data.DataColumn("blnShowForSingleTotals", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnShowForSingleTotals);
                this.columnblnApplyFilter = new global::System.Data.DataColumn("blnApplyFilter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnApplyFilter);
                this.columnblnShareLayout = new global::System.Data.DataColumn("blnShareLayout", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnShareLayout);
                this.columnblnPivotAxis = new global::System.Data.DataColumn("blnPivotAxis", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnPivotAxis);
                this.columnblnShowXLabels = new global::System.Data.DataColumn("blnShowXLabels", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnShowXLabels);
                this.columnblnShowPointLabels = new global::System.Data.DataColumn("blnShowPointLabels", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblnShowPointLabels);
                this.columnstrGisLayerSettings = new global::System.Data.DataColumn("strGisLayerSettings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrGisLayerSettings);
                this.columnblbGisLayerSettings = new global::System.Data.DataColumn("blbGisLayerSettings", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblbGisLayerSettings);
                this.columnstrGisMapSettings = new global::System.Data.DataColumn("strGisMapSettings", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrGisMapSettings);
                this.columnblbGisZippedMapSettings = new global::System.Data.DataColumn("blbGisZippedMapSettings", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblbGisZippedMapSettings);
                this.columnintGisLayerPosition = new global::System.Data.DataColumn("intGisLayerPosition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintGisLayerPosition);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidflLayout}, true));
                this.columnidflLayout.AllowDBNull = false;
                this.columnidflLayout.Unique = true;
                this.columnidflQuery.AllowDBNull = false;
                this.columnidfsGroupInterval.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LayoutRow NewLayoutRow() {
                return ((LayoutRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LayoutRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LayoutRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LayoutRowChanged != null)) {
                    this.LayoutRowChanged(this, new LayoutRowChangeEvent(((LayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LayoutRowChanging != null)) {
                    this.LayoutRowChanging(this, new LayoutRowChangeEvent(((LayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LayoutRowDeleted != null)) {
                    this.LayoutRowDeleted(this, new LayoutRowChangeEvent(((LayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LayoutRowDeleting != null)) {
                    this.LayoutRowDeleting(this, new LayoutRowChangeEvent(((LayoutRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLayoutRow(LayoutRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LayoutDetailDataSet ds = new LayoutDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LayoutDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AggregateDataTable : global::System.Data.TypedTableBase<AggregateRow> {
            
            private global::System.Data.DataColumn columnidfLayoutSearchField;
            
            private global::System.Data.DataColumn columnidflLayout;
            
            private global::System.Data.DataColumn columnidfsAggregateFunction;
            
            private global::System.Data.DataColumn columnSearchFieldAlias;
            
            private global::System.Data.DataColumn columnstrOriginalFieldENCaption;
            
            private global::System.Data.DataColumn columnstrOriginalFieldCaption;
            
            private global::System.Data.DataColumn columnstrNewFieldENCaption;
            
            private global::System.Data.DataColumn columnstrNewFieldCaption;
            
            private global::System.Data.DataColumn columnidfUnitQuerySearchField;
            
            private global::System.Data.DataColumn columnidfDenominatorQuerySearchField;
            
            private global::System.Data.DataColumn columnidfDateQuerySearchField;
            
            private global::System.Data.DataColumn columnUnitSearchFieldAlias;
            
            private global::System.Data.DataColumn columnDenominatorSearchFieldAlias;
            
            private global::System.Data.DataColumn columnDateSearchFieldAlias;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AggregateDataTable() {
                this.TableName = "Aggregate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AggregateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AggregateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfLayoutSearchFieldColumn {
                get {
                    return this.columnidfLayoutSearchField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idflLayoutColumn {
                get {
                    return this.columnidflLayout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfsAggregateFunctionColumn {
                get {
                    return this.columnidfsAggregateFunction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SearchFieldAliasColumn {
                get {
                    return this.columnSearchFieldAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strOriginalFieldENCaptionColumn {
                get {
                    return this.columnstrOriginalFieldENCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strOriginalFieldCaptionColumn {
                get {
                    return this.columnstrOriginalFieldCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNewFieldENCaptionColumn {
                get {
                    return this.columnstrNewFieldENCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNewFieldCaptionColumn {
                get {
                    return this.columnstrNewFieldCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfUnitQuerySearchFieldColumn {
                get {
                    return this.columnidfUnitQuerySearchField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfDenominatorQuerySearchFieldColumn {
                get {
                    return this.columnidfDenominatorQuerySearchField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idfDateQuerySearchFieldColumn {
                get {
                    return this.columnidfDateQuerySearchField;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitSearchFieldAliasColumn {
                get {
                    return this.columnUnitSearchFieldAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DenominatorSearchFieldAliasColumn {
                get {
                    return this.columnDenominatorSearchFieldAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateSearchFieldAliasColumn {
                get {
                    return this.columnDateSearchFieldAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AggregateRow this[int index] {
                get {
                    return ((AggregateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AggregateRowChangeEventHandler AggregateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AggregateRowChangeEventHandler AggregateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AggregateRowChangeEventHandler AggregateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AggregateRowChangeEventHandler AggregateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAggregateRow(AggregateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AggregateRow AddAggregateRow(long idfLayoutSearchField, long idflLayout, long idfsAggregateFunction, string SearchFieldAlias, string strOriginalFieldENCaption, string strOriginalFieldCaption, string strNewFieldENCaption, string strNewFieldCaption, long idfUnitQuerySearchField, long idfDenominatorQuerySearchField, long idfDateQuerySearchField, string UnitSearchFieldAlias, string DenominatorSearchFieldAlias, string DateSearchFieldAlias) {
                AggregateRow rowAggregateRow = ((AggregateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        idfLayoutSearchField,
                        idflLayout,
                        idfsAggregateFunction,
                        SearchFieldAlias,
                        strOriginalFieldENCaption,
                        strOriginalFieldCaption,
                        strNewFieldENCaption,
                        strNewFieldCaption,
                        idfUnitQuerySearchField,
                        idfDenominatorQuerySearchField,
                        idfDateQuerySearchField,
                        UnitSearchFieldAlias,
                        DenominatorSearchFieldAlias,
                        DateSearchFieldAlias};
                rowAggregateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAggregateRow);
                return rowAggregateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AggregateRow FindByidfLayoutSearchField(long idfLayoutSearchField) {
                return ((AggregateRow)(this.Rows.Find(new object[] {
                            idfLayoutSearchField})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AggregateDataTable cln = ((AggregateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AggregateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnidfLayoutSearchField = base.Columns["idfLayoutSearchField"];
                this.columnidflLayout = base.Columns["idflLayout"];
                this.columnidfsAggregateFunction = base.Columns["idfsAggregateFunction"];
                this.columnSearchFieldAlias = base.Columns["SearchFieldAlias"];
                this.columnstrOriginalFieldENCaption = base.Columns["strOriginalFieldENCaption"];
                this.columnstrOriginalFieldCaption = base.Columns["strOriginalFieldCaption"];
                this.columnstrNewFieldENCaption = base.Columns["strNewFieldENCaption"];
                this.columnstrNewFieldCaption = base.Columns["strNewFieldCaption"];
                this.columnidfUnitQuerySearchField = base.Columns["idfUnitQuerySearchField"];
                this.columnidfDenominatorQuerySearchField = base.Columns["idfDenominatorQuerySearchField"];
                this.columnidfDateQuerySearchField = base.Columns["idfDateQuerySearchField"];
                this.columnUnitSearchFieldAlias = base.Columns["UnitSearchFieldAlias"];
                this.columnDenominatorSearchFieldAlias = base.Columns["DenominatorSearchFieldAlias"];
                this.columnDateSearchFieldAlias = base.Columns["DateSearchFieldAlias"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnidfLayoutSearchField = new global::System.Data.DataColumn("idfLayoutSearchField", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfLayoutSearchField);
                this.columnidflLayout = new global::System.Data.DataColumn("idflLayout", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidflLayout);
                this.columnidfsAggregateFunction = new global::System.Data.DataColumn("idfsAggregateFunction", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfsAggregateFunction);
                this.columnSearchFieldAlias = new global::System.Data.DataColumn("SearchFieldAlias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearchFieldAlias);
                this.columnstrOriginalFieldENCaption = new global::System.Data.DataColumn("strOriginalFieldENCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrOriginalFieldENCaption);
                this.columnstrOriginalFieldCaption = new global::System.Data.DataColumn("strOriginalFieldCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrOriginalFieldCaption);
                this.columnstrNewFieldENCaption = new global::System.Data.DataColumn("strNewFieldENCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNewFieldENCaption);
                this.columnstrNewFieldCaption = new global::System.Data.DataColumn("strNewFieldCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNewFieldCaption);
                this.columnidfUnitQuerySearchField = new global::System.Data.DataColumn("idfUnitQuerySearchField", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfUnitQuerySearchField);
                this.columnidfDenominatorQuerySearchField = new global::System.Data.DataColumn("idfDenominatorQuerySearchField", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfDenominatorQuerySearchField);
                this.columnidfDateQuerySearchField = new global::System.Data.DataColumn("idfDateQuerySearchField", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidfDateQuerySearchField);
                this.columnUnitSearchFieldAlias = new global::System.Data.DataColumn("UnitSearchFieldAlias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitSearchFieldAlias);
                this.columnDenominatorSearchFieldAlias = new global::System.Data.DataColumn("DenominatorSearchFieldAlias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDenominatorSearchFieldAlias);
                this.columnDateSearchFieldAlias = new global::System.Data.DataColumn("DateSearchFieldAlias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateSearchFieldAlias);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnidfLayoutSearchField}, true));
                this.columnidfLayoutSearchField.AllowDBNull = false;
                this.columnidfLayoutSearchField.Unique = true;
                this.columnidflLayout.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AggregateRow NewAggregateRow() {
                return ((AggregateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AggregateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AggregateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AggregateRowChanged != null)) {
                    this.AggregateRowChanged(this, new AggregateRowChangeEvent(((AggregateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AggregateRowChanging != null)) {
                    this.AggregateRowChanging(this, new AggregateRowChangeEvent(((AggregateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AggregateRowDeleted != null)) {
                    this.AggregateRowDeleted(this, new AggregateRowChangeEvent(((AggregateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AggregateRowDeleting != null)) {
                    this.AggregateRowDeleting(this, new AggregateRowChangeEvent(((AggregateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAggregateRow(AggregateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LayoutDetailDataSet ds = new LayoutDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AggregateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LayoutRow : global::System.Data.DataRow {
            
            private LayoutDataTable tableLayout;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LayoutRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLayout = ((LayoutDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idflLayout {
                get {
                    return ((long)(this[this.tableLayout.idflLayoutColumn]));
                }
                set {
                    this[this.tableLayout.idflLayoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLayoutName {
                get {
                    try {
                        return ((string)(this[this.tableLayout.strLayoutNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLayoutName\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.strLayoutNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDefaultLayoutName {
                get {
                    try {
                        return ((string)(this[this.tableLayout.strDefaultLayoutNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strDefaultLayoutName\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.strDefaultLayoutNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idflPivotName {
                get {
                    try {
                        return ((long)(this[this.tableLayout.idflPivotNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idflPivotName\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.idflPivotNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPivotName {
                get {
                    if (this.IsstrPivotNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLayout.strPivotNameColumn]));
                    }
                }
                set {
                    this[this.tableLayout.strPivotNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idflDescription {
                get {
                    try {
                        return ((long)(this[this.tableLayout.idflDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idflDescription\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.idflDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDescription {
                get {
                    if (this.IsstrDescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLayout.strDescriptionColumn]));
                    }
                }
                set {
                    this[this.tableLayout.strDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idflQuery {
                get {
                    return ((long)(this[this.tableLayout.idflQueryColumn]));
                }
                set {
                    this[this.tableLayout.idflQueryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idflLayoutFolder {
                get {
                    try {
                        return ((long)(this[this.tableLayout.idflLayoutFolderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idflLayoutFolder\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.idflLayoutFolderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfUserID {
                get {
                    try {
                        return ((long)(this[this.tableLayout.idfUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfUserID\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.idfUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBasicXml {
                get {
                    if (this.IsstrBasicXmlNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLayout.strBasicXmlColumn]));
                    }
                }
                set {
                    this[this.tableLayout.strBasicXmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] blbZippedBasicXml {
                get {
                    try {
                        return ((byte[])(this[this.tableLayout.blbZippedBasicXmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blbZippedBasicXml\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blbZippedBasicXmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnReadOnly {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnReadOnlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnReadOnly\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnReadOnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idflMapName {
                get {
                    try {
                        return ((long)(this[this.tableLayout.idflMapNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idflMapName\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.idflMapNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strMapName {
                get {
                    if (this.IsstrMapNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLayout.strMapNameColumn]));
                    }
                }
                set {
                    this[this.tableLayout.strMapNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idflChartName {
                get {
                    try {
                        return ((long)(this[this.tableLayout.idflChartNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idflChartName\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.idflChartNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strChartName {
                get {
                    if (this.IsstrChartNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLayout.strChartNameColumn]));
                    }
                }
                set {
                    this[this.tableLayout.strChartNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsGroupInterval {
                get {
                    return ((long)(this[this.tableLayout.idfsGroupIntervalColumn]));
                }
                set {
                    this[this.tableLayout.idfsGroupIntervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strGroupIntervalName {
                get {
                    if (this.IsstrGroupIntervalNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLayout.strGroupIntervalNameColumn]));
                    }
                }
                set {
                    this[this.tableLayout.strGroupIntervalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsChartType {
                get {
                    try {
                        return ((long)(this[this.tableLayout.idfsChartTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsChartType\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.idfsChartTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strChartTypeName {
                get {
                    if (this.IsstrChartTypeNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLayout.strChartTypeNameColumn]));
                    }
                }
                set {
                    this[this.tableLayout.strChartTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnShowColsTotals {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnShowColsTotalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnShowColsTotals\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnShowColsTotalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnShowRowsTotals {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnShowRowsTotalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnShowRowsTotals\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnShowRowsTotalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnShowColGrandTotals {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnShowColGrandTotalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnShowColGrandTotals\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnShowColGrandTotalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnShowRowGrandTotals {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnShowRowGrandTotalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnShowRowGrandTotals\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnShowRowGrandTotalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnShowForSingleTotals {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnShowForSingleTotalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnShowForSingleTotals\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnShowForSingleTotalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnApplyFilter {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnApplyFilterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnApplyFilter\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnApplyFilterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnShareLayout {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnShareLayoutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnShareLayout\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnShareLayoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnPivotAxis {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnPivotAxisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnPivotAxis\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnPivotAxisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnShowXLabels {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnShowXLabelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnShowXLabels\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnShowXLabelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool blnShowPointLabels {
                get {
                    try {
                        return ((bool)(this[this.tableLayout.blnShowPointLabelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blnShowPointLabels\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blnShowPointLabelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strGisLayerSettings {
                get {
                    if (this.IsstrGisLayerSettingsNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLayout.strGisLayerSettingsColumn]));
                    }
                }
                set {
                    this[this.tableLayout.strGisLayerSettingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] blbGisLayerSettings {
                get {
                    try {
                        return ((byte[])(this[this.tableLayout.blbGisLayerSettingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blbGisLayerSettings\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blbGisLayerSettingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strGisMapSettings {
                get {
                    if (this.IsstrGisMapSettingsNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLayout.strGisMapSettingsColumn]));
                    }
                }
                set {
                    this[this.tableLayout.strGisMapSettingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] blbGisZippedMapSettings {
                get {
                    try {
                        return ((byte[])(this[this.tableLayout.blbGisZippedMapSettingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blbGisZippedMapSettings\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.blbGisZippedMapSettingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intGisLayerPosition {
                get {
                    try {
                        return ((int)(this[this.tableLayout.intGisLayerPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intGisLayerPosition\' in table \'Layout\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLayout.intGisLayerPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLayoutNameNull() {
                return this.IsNull(this.tableLayout.strLayoutNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLayoutNameNull() {
                this[this.tableLayout.strLayoutNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrDefaultLayoutNameNull() {
                return this.IsNull(this.tableLayout.strDefaultLayoutNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrDefaultLayoutNameNull() {
                this[this.tableLayout.strDefaultLayoutNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidflPivotNameNull() {
                return this.IsNull(this.tableLayout.idflPivotNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidflPivotNameNull() {
                this[this.tableLayout.idflPivotNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPivotNameNull() {
                return this.IsNull(this.tableLayout.strPivotNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPivotNameNull() {
                this[this.tableLayout.strPivotNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidflDescriptionNull() {
                return this.IsNull(this.tableLayout.idflDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidflDescriptionNull() {
                this[this.tableLayout.idflDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrDescriptionNull() {
                return this.IsNull(this.tableLayout.strDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrDescriptionNull() {
                this[this.tableLayout.strDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidflLayoutFolderNull() {
                return this.IsNull(this.tableLayout.idflLayoutFolderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidflLayoutFolderNull() {
                this[this.tableLayout.idflLayoutFolderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfUserIDNull() {
                return this.IsNull(this.tableLayout.idfUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfUserIDNull() {
                this[this.tableLayout.idfUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBasicXmlNull() {
                return this.IsNull(this.tableLayout.strBasicXmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBasicXmlNull() {
                this[this.tableLayout.strBasicXmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblbZippedBasicXmlNull() {
                return this.IsNull(this.tableLayout.blbZippedBasicXmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblbZippedBasicXmlNull() {
                this[this.tableLayout.blbZippedBasicXmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnReadOnlyNull() {
                return this.IsNull(this.tableLayout.blnReadOnlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnReadOnlyNull() {
                this[this.tableLayout.blnReadOnlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidflMapNameNull() {
                return this.IsNull(this.tableLayout.idflMapNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidflMapNameNull() {
                this[this.tableLayout.idflMapNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrMapNameNull() {
                return this.IsNull(this.tableLayout.strMapNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrMapNameNull() {
                this[this.tableLayout.strMapNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidflChartNameNull() {
                return this.IsNull(this.tableLayout.idflChartNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidflChartNameNull() {
                this[this.tableLayout.idflChartNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrChartNameNull() {
                return this.IsNull(this.tableLayout.strChartNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrChartNameNull() {
                this[this.tableLayout.strChartNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrGroupIntervalNameNull() {
                return this.IsNull(this.tableLayout.strGroupIntervalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrGroupIntervalNameNull() {
                this[this.tableLayout.strGroupIntervalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsChartTypeNull() {
                return this.IsNull(this.tableLayout.idfsChartTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsChartTypeNull() {
                this[this.tableLayout.idfsChartTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrChartTypeNameNull() {
                return this.IsNull(this.tableLayout.strChartTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrChartTypeNameNull() {
                this[this.tableLayout.strChartTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnShowColsTotalsNull() {
                return this.IsNull(this.tableLayout.blnShowColsTotalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnShowColsTotalsNull() {
                this[this.tableLayout.blnShowColsTotalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnShowRowsTotalsNull() {
                return this.IsNull(this.tableLayout.blnShowRowsTotalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnShowRowsTotalsNull() {
                this[this.tableLayout.blnShowRowsTotalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnShowColGrandTotalsNull() {
                return this.IsNull(this.tableLayout.blnShowColGrandTotalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnShowColGrandTotalsNull() {
                this[this.tableLayout.blnShowColGrandTotalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnShowRowGrandTotalsNull() {
                return this.IsNull(this.tableLayout.blnShowRowGrandTotalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnShowRowGrandTotalsNull() {
                this[this.tableLayout.blnShowRowGrandTotalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnShowForSingleTotalsNull() {
                return this.IsNull(this.tableLayout.blnShowForSingleTotalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnShowForSingleTotalsNull() {
                this[this.tableLayout.blnShowForSingleTotalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnApplyFilterNull() {
                return this.IsNull(this.tableLayout.blnApplyFilterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnApplyFilterNull() {
                this[this.tableLayout.blnApplyFilterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnShareLayoutNull() {
                return this.IsNull(this.tableLayout.blnShareLayoutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnShareLayoutNull() {
                this[this.tableLayout.blnShareLayoutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnPivotAxisNull() {
                return this.IsNull(this.tableLayout.blnPivotAxisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnPivotAxisNull() {
                this[this.tableLayout.blnPivotAxisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnShowXLabelsNull() {
                return this.IsNull(this.tableLayout.blnShowXLabelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnShowXLabelsNull() {
                this[this.tableLayout.blnShowXLabelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblnShowPointLabelsNull() {
                return this.IsNull(this.tableLayout.blnShowPointLabelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblnShowPointLabelsNull() {
                this[this.tableLayout.blnShowPointLabelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrGisLayerSettingsNull() {
                return this.IsNull(this.tableLayout.strGisLayerSettingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrGisLayerSettingsNull() {
                this[this.tableLayout.strGisLayerSettingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblbGisLayerSettingsNull() {
                return this.IsNull(this.tableLayout.blbGisLayerSettingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblbGisLayerSettingsNull() {
                this[this.tableLayout.blbGisLayerSettingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrGisMapSettingsNull() {
                return this.IsNull(this.tableLayout.strGisMapSettingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrGisMapSettingsNull() {
                this[this.tableLayout.strGisMapSettingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsblbGisZippedMapSettingsNull() {
                return this.IsNull(this.tableLayout.blbGisZippedMapSettingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetblbGisZippedMapSettingsNull() {
                this[this.tableLayout.blbGisZippedMapSettingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintGisLayerPositionNull() {
                return this.IsNull(this.tableLayout.intGisLayerPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintGisLayerPositionNull() {
                this[this.tableLayout.intGisLayerPositionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AggregateRow : global::System.Data.DataRow {
            
            private AggregateDataTable tableAggregate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AggregateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAggregate = ((AggregateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfLayoutSearchField {
                get {
                    return ((long)(this[this.tableAggregate.idfLayoutSearchFieldColumn]));
                }
                set {
                    this[this.tableAggregate.idfLayoutSearchFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idflLayout {
                get {
                    return ((long)(this[this.tableAggregate.idflLayoutColumn]));
                }
                set {
                    this[this.tableAggregate.idflLayoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfsAggregateFunction {
                get {
                    try {
                        return ((long)(this[this.tableAggregate.idfsAggregateFunctionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfsAggregateFunction\' in table \'Aggregate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAggregate.idfsAggregateFunctionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SearchFieldAlias {
                get {
                    if (this.IsSearchFieldAliasNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAggregate.SearchFieldAliasColumn]));
                    }
                }
                set {
                    this[this.tableAggregate.SearchFieldAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strOriginalFieldENCaption {
                get {
                    if (this.IsstrOriginalFieldENCaptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAggregate.strOriginalFieldENCaptionColumn]));
                    }
                }
                set {
                    this[this.tableAggregate.strOriginalFieldENCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strOriginalFieldCaption {
                get {
                    if (this.IsstrOriginalFieldCaptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAggregate.strOriginalFieldCaptionColumn]));
                    }
                }
                set {
                    this[this.tableAggregate.strOriginalFieldCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNewFieldENCaption {
                get {
                    if (this.IsstrNewFieldENCaptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAggregate.strNewFieldENCaptionColumn]));
                    }
                }
                set {
                    this[this.tableAggregate.strNewFieldENCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNewFieldCaption {
                get {
                    if (this.IsstrNewFieldCaptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAggregate.strNewFieldCaptionColumn]));
                    }
                }
                set {
                    this[this.tableAggregate.strNewFieldCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfUnitQuerySearchField {
                get {
                    try {
                        return ((long)(this[this.tableAggregate.idfUnitQuerySearchFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfUnitQuerySearchField\' in table \'Aggregate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAggregate.idfUnitQuerySearchFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfDenominatorQuerySearchField {
                get {
                    try {
                        return ((long)(this[this.tableAggregate.idfDenominatorQuerySearchFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfDenominatorQuerySearchField\' in table \'Aggregate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAggregate.idfDenominatorQuerySearchFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long idfDateQuerySearchField {
                get {
                    try {
                        return ((long)(this[this.tableAggregate.idfDateQuerySearchFieldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idfDateQuerySearchField\' in table \'Aggregate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAggregate.idfDateQuerySearchFieldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitSearchFieldAlias {
                get {
                    try {
                        return ((string)(this[this.tableAggregate.UnitSearchFieldAliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitSearchFieldAlias\' in table \'Aggregate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAggregate.UnitSearchFieldAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DenominatorSearchFieldAlias {
                get {
                    try {
                        return ((string)(this[this.tableAggregate.DenominatorSearchFieldAliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DenominatorSearchFieldAlias\' in table \'Aggregate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAggregate.DenominatorSearchFieldAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DateSearchFieldAlias {
                get {
                    try {
                        return ((string)(this[this.tableAggregate.DateSearchFieldAliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateSearchFieldAlias\' in table \'Aggregate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAggregate.DateSearchFieldAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfsAggregateFunctionNull() {
                return this.IsNull(this.tableAggregate.idfsAggregateFunctionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfsAggregateFunctionNull() {
                this[this.tableAggregate.idfsAggregateFunctionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSearchFieldAliasNull() {
                return this.IsNull(this.tableAggregate.SearchFieldAliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSearchFieldAliasNull() {
                this[this.tableAggregate.SearchFieldAliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrOriginalFieldENCaptionNull() {
                return this.IsNull(this.tableAggregate.strOriginalFieldENCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrOriginalFieldENCaptionNull() {
                this[this.tableAggregate.strOriginalFieldENCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrOriginalFieldCaptionNull() {
                return this.IsNull(this.tableAggregate.strOriginalFieldCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrOriginalFieldCaptionNull() {
                this[this.tableAggregate.strOriginalFieldCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNewFieldENCaptionNull() {
                return this.IsNull(this.tableAggregate.strNewFieldENCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNewFieldENCaptionNull() {
                this[this.tableAggregate.strNewFieldENCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNewFieldCaptionNull() {
                return this.IsNull(this.tableAggregate.strNewFieldCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNewFieldCaptionNull() {
                this[this.tableAggregate.strNewFieldCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfUnitQuerySearchFieldNull() {
                return this.IsNull(this.tableAggregate.idfUnitQuerySearchFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfUnitQuerySearchFieldNull() {
                this[this.tableAggregate.idfUnitQuerySearchFieldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfDenominatorQuerySearchFieldNull() {
                return this.IsNull(this.tableAggregate.idfDenominatorQuerySearchFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfDenominatorQuerySearchFieldNull() {
                this[this.tableAggregate.idfDenominatorQuerySearchFieldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidfDateQuerySearchFieldNull() {
                return this.IsNull(this.tableAggregate.idfDateQuerySearchFieldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidfDateQuerySearchFieldNull() {
                this[this.tableAggregate.idfDateQuerySearchFieldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitSearchFieldAliasNull() {
                return this.IsNull(this.tableAggregate.UnitSearchFieldAliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitSearchFieldAliasNull() {
                this[this.tableAggregate.UnitSearchFieldAliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDenominatorSearchFieldAliasNull() {
                return this.IsNull(this.tableAggregate.DenominatorSearchFieldAliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDenominatorSearchFieldAliasNull() {
                this[this.tableAggregate.DenominatorSearchFieldAliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateSearchFieldAliasNull() {
                return this.IsNull(this.tableAggregate.DateSearchFieldAliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateSearchFieldAliasNull() {
                this[this.tableAggregate.DateSearchFieldAliasColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LayoutRowChangeEvent : global::System.EventArgs {
            
            private LayoutRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LayoutRowChangeEvent(LayoutRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LayoutRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AggregateRowChangeEvent : global::System.EventArgs {
            
            private AggregateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AggregateRowChangeEvent(AggregateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AggregateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EIDSS.RAM_DB.DBService.DataSource.LayoutDetailDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LayoutAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LayoutAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Layout";
            tableMapping.ColumnMappings.Add("idflLayout", "idflLayout");
            tableMapping.ColumnMappings.Add("strLayoutName", "strLayoutName");
            tableMapping.ColumnMappings.Add("strDefaultLayoutName", "strDefaultLayoutName");
            tableMapping.ColumnMappings.Add("idflPivotName", "idflPivotName");
            tableMapping.ColumnMappings.Add("strPivotName", "strPivotName");
            tableMapping.ColumnMappings.Add("idflDescription", "idflDescription");
            tableMapping.ColumnMappings.Add("strDescription", "strDescription");
            tableMapping.ColumnMappings.Add("idflQuery", "idflQuery");
            tableMapping.ColumnMappings.Add("idflLayoutFolder", "idflLayoutFolder");
            tableMapping.ColumnMappings.Add("idfUserID", "idfUserID");
            tableMapping.ColumnMappings.Add("strBasicXml", "strBasicXml");
            tableMapping.ColumnMappings.Add("blbZippedBasicXml", "blbZippedBasicXml");
            tableMapping.ColumnMappings.Add("blnReadOnly", "blnReadOnly");
            tableMapping.ColumnMappings.Add("idflMapName", "idflMapName");
            tableMapping.ColumnMappings.Add("strMapName", "strMapName");
            tableMapping.ColumnMappings.Add("idflChartName", "idflChartName");
            tableMapping.ColumnMappings.Add("strChartName", "strChartName");
            tableMapping.ColumnMappings.Add("idfsGroupInterval", "idfsGroupInterval");
            tableMapping.ColumnMappings.Add("strGroupIntervalName", "strGroupIntervalName");
            tableMapping.ColumnMappings.Add("idfsChartType", "idfsChartType");
            tableMapping.ColumnMappings.Add("strChartTypeName", "strChartTypeName");
            tableMapping.ColumnMappings.Add("blnShowColsTotals", "blnShowColsTotals");
            tableMapping.ColumnMappings.Add("blnShowRowsTotals", "blnShowRowsTotals");
            tableMapping.ColumnMappings.Add("blnShowColGrandTotals", "blnShowColGrandTotals");
            tableMapping.ColumnMappings.Add("blnShowRowGrandTotals", "blnShowRowGrandTotals");
            tableMapping.ColumnMappings.Add("blnShowForSingleTotals", "blnShowForSingleTotals");
            tableMapping.ColumnMappings.Add("blnApplyFilter", "blnApplyFilter");
            tableMapping.ColumnMappings.Add("blnShareLayout", "blnShareLayout");
            tableMapping.ColumnMappings.Add("blnPivotAxis", "blnPivotAxis");
            tableMapping.ColumnMappings.Add("blnShowXLabels", "blnShowXLabels");
            tableMapping.ColumnMappings.Add("blnShowPointLabels", "blnShowPointLabels");
            tableMapping.ColumnMappings.Add("strGisLayerSettings", "strGisLayerSettings");
            tableMapping.ColumnMappings.Add("blbGisLayerSettings", "blbGisLayerSettings");
            tableMapping.ColumnMappings.Add("strGisMapSettings", "strGisMapSettings");
            tableMapping.ColumnMappings.Add("blbGisZippedMapSettings", "blbGisZippedMapSettings");
            tableMapping.ColumnMappings.Add("intGisLayerPosition", "intGisLayerPosition");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EIDSS.RAM_DB.Properties.Settings.Default.eidss_v4_IvanConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spAsLayoutSelectDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LangID", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LayoutID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LayoutDetailDataSet.LayoutDataTable dataTable, string LangID, global::System.Nullable<long> LayoutID, global::System.Nullable<long> UserID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((LayoutID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(LayoutID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((long)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LayoutDetailDataSet.LayoutDataTable GetData(string LangID, global::System.Nullable<long> LayoutID, global::System.Nullable<long> UserID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((LayoutID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(LayoutID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((UserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((long)(UserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            LayoutDetailDataSet.LayoutDataTable dataTable = new LayoutDetailDataSet.LayoutDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AggregateAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AggregateAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Aggregate";
            tableMapping.ColumnMappings.Add("idfLayoutSearchField", "idfLayoutSearchField");
            tableMapping.ColumnMappings.Add("idflLayout", "idflLayout");
            tableMapping.ColumnMappings.Add("idfsAggregateFunction", "idfsAggregateFunction");
            tableMapping.ColumnMappings.Add("SearchFieldAlias", "SearchFieldAlias");
            tableMapping.ColumnMappings.Add("strOriginalFieldENCaption", "strOriginalFieldENCaption");
            tableMapping.ColumnMappings.Add("strOriginalFieldCaption", "strOriginalFieldCaption");
            tableMapping.ColumnMappings.Add("strNewFieldENCaption", "strNewFieldENCaption");
            tableMapping.ColumnMappings.Add("strNewFieldCaption", "strNewFieldCaption");
            tableMapping.ColumnMappings.Add("idfUnitQuerySearchField", "idfUnitQuerySearchField");
            tableMapping.ColumnMappings.Add("idfDenominatorQuerySearchField", "idfDenominatorQuerySearchField");
            tableMapping.ColumnMappings.Add("idfDateQuerySearchField", "idfDateQuerySearchField");
            tableMapping.ColumnMappings.Add("UnitSearchFieldAlias", "UnitSearchFieldAlias");
            tableMapping.ColumnMappings.Add("DenominatorSearchFieldAlias", "DenominatorSearchFieldAlias");
            tableMapping.ColumnMappings.Add("DateSearchFieldAlias", "DateSearchFieldAlias");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EIDSS.RAM_DB.Properties.Settings.Default.EIDSS_v4ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spAsLayoutSelectAggregateDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LangID", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LayoutID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LayoutDetailDataSet.AggregateDataTable dataTable, string LangID, global::System.Nullable<long> LayoutID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((LayoutID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(LayoutID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LayoutDetailDataSet.AggregateDataTable GetData(string LangID, global::System.Nullable<long> LayoutID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((LangID == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(LangID));
            }
            if ((LayoutID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(LayoutID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            LayoutDetailDataSet.AggregateDataTable dataTable = new LayoutDetailDataSet.AggregateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591