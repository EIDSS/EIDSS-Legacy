//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version Beta 1.2
//
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Beta Version
//
package com.WSParser.WebServices.EidssService;

import org.ksoap2.SoapEnvelope;
import org.ksoap2.SoapFault;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;
import org.ksoap2.transport.HttpsTransportSE;
import org.ksoap2.transport.Transport;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.HeaderProperty;

import java.net.MalformedURLException;
import java.net.URL;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;
import java.util.List;

import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSession;
import javax.net.ssl.TrustManager;
import javax.net.ssl.X509TrustManager;

public class EidssService{
    public String NAMESPACE =" http://bv.com/eidss";
    public String url="{0}";
    public int timeOut = 60000;
    


    public void setTimeOut(int seconds){
        this.timeOut = seconds * 1000;
    }
    public void setUrl(String url){
        this.url = url;
    }

    private static boolean bTrusted = false;
    protected static class NullHostNameVerifier implements HostnameVerifier {

        public boolean verify(String hostname, SSLSession session) {
            return true;
        }
    }    
    private static void trustAllHosts() {
    	if (bTrusted) return;
    	
        // Create a trust manager that does not validate certificate chains
        TrustManager[] trustAllCerts = new TrustManager[] { new X509TrustManager() {
                public java.security.cert.X509Certificate[] getAcceptedIssuers() {
                        return new java.security.cert.X509Certificate[] {};
                }

                public void checkClientTrusted(X509Certificate[] chain,
                                String authType) throws CertificateException {
                }

                public void checkServerTrusted(X509Certificate[] chain,
                                String authType) throws CertificateException {
                }
        } };

        // Install the all-trusting trust manager
        try {
            HttpsURLConnection.setDefaultHostnameVerifier(new NullHostNameVerifier());
            SSLContext sc = SSLContext.getInstance("TLS");
            sc.init(null, trustAllCerts, new java.security.SecureRandom());
            HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
                
        } catch (Exception e) {
                e.printStackTrace();
        }
        bTrusted = true;
    }
    
   
    private Transport getTransport(String strUrl) throws MalformedURLException{
    	URL url = new URL(strUrl);
        if (url.getProtocol().toLowerCase().equals("https")) {
            trustAllHosts();
            return new HttpsTransportSE(url.getHost(), url.getPort(), "", timeOut);
        } else {
        	return new HttpTransportSE(strUrl,timeOut);
        }    
    }
    
    
    
    
    
    /*
    public VectorHumanCaseListInfo GetHumanCaseList(HumanCaseListInfo filter){
        return GetHumanCaseList(filter,null);
    }


    public VectorHumanCaseListInfo GetHumanCaseList(HumanCaseListInfo filter,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetHumanCaseList");
        soapEnvelope.addMapping("http://bv.com/eidss","HumanCaseListInfo[]",new VectorHumanCaseListInfo().getClass());
        soapEnvelope.addMapping("http://bv.com/eidss","filter",new HumanCaseListInfo().getClass());
        soapReq.addProperty("filter",filter);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetHumanCaseList", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetHumanCaseList", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("GetHumanCaseListResult");
            VectorHumanCaseListInfo GetHumanCaseListResult = new VectorHumanCaseListInfo(soapObject);
            return GetHumanCaseListResult;
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public VectorVetCaseListInfo GetVetCaseList(VetCaseListInfo filter){
        return GetVetCaseList(filter,null);
    }


    public VectorVetCaseListInfo GetVetCaseList(VetCaseListInfo filter,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetVetCaseList");
        soapEnvelope.addMapping("http://bv.com/eidss","VetCaseListInfo[]",new VectorVetCaseListInfo().getClass());
        soapEnvelope.addMapping("http://bv.com/eidss","filter",new VetCaseListInfo().getClass());
        soapReq.addProperty("filter",filter);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetVetCaseList", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetVetCaseList", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("GetVetCaseListResult");
            VectorVetCaseListInfo GetVetCaseListResult = new VectorVetCaseListInfo(soapObject);
            return GetVetCaseListResult;
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public VectorDiagnosisLookupItem GetDiagnosisList(int code){
        return GetDiagnosisList(code,null);
    }


    public VectorDiagnosisLookupItem GetDiagnosisList(int code,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetDiagnosisList");
        soapEnvelope.addMapping("http://bv.com/eidss","DiagnosisLookupItem[]",new VectorDiagnosisLookupItem().getClass());
        soapReq.addProperty("code",code);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetDiagnosisList", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetDiagnosisList", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("GetDiagnosisListResult");
            VectorDiagnosisLookupItem GetDiagnosisListResult = new VectorDiagnosisLookupItem(soapObject);
            return GetDiagnosisListResult;
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public VectorRayonLookupItem GetRayonList(long region){
        return GetRayonList(region,null);
    }


    public VectorRayonLookupItem GetRayonList(long region,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetRayonList");
        soapEnvelope.addMapping("http://bv.com/eidss","RayonLookupItem[]",new VectorRayonLookupItem().getClass());
        soapReq.addProperty("region",region);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetRayonList", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetRayonList", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("GetRayonListResult");
            VectorRayonLookupItem GetRayonListResult = new VectorRayonLookupItem(soapObject);
            return GetRayonListResult;
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public VectorRegionLookupItem GetRegionList(){
        return GetRegionList(null);
    }


    public VectorRegionLookupItem GetRegionList(List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetRegionList");
        soapEnvelope.addMapping("http://bv.com/eidss","RegionLookupItem[]",new VectorRegionLookupItem().getClass());
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetRegionList", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetRegionList", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("GetRegionListResult");
            VectorRegionLookupItem GetRegionListResult = new VectorRegionLookupItem(soapObject);
            return GetRegionListResult;
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public VectorBaseReferenceItem GetBaseReferenceList(long type){
        return GetBaseReferenceList(type,null);
    }


    public VectorBaseReferenceItem GetBaseReferenceList(long type,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetBaseReferenceList");
        soapEnvelope.addMapping("http://bv.com/eidss","BaseReferenceItem[]",new VectorBaseReferenceItem().getClass());
        soapReq.addProperty("type",type);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetBaseReferenceList", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetBaseReferenceList", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("GetBaseReferenceListResult");
            VectorBaseReferenceItem GetBaseReferenceListResult = new VectorBaseReferenceItem(soapObject);
            return GetBaseReferenceListResult;
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public HumanCaseInfo GetHumanCase(String id){
        return GetHumanCase(id,null);
    }


    public HumanCaseInfo GetHumanCase(String id,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetHumanCase");
        soapEnvelope.addMapping("http://bv.com/eidss","HumanCaseInfo",new HumanCaseInfo().getClass());
        soapReq.addProperty("id",id);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetHumanCase", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetHumanCase", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            if (result.hasProperty("GetHumanCaseResult"))
            {
                SoapObject j0 = (SoapObject)result.getProperty("GetHumanCaseResult");
                HumanCaseInfo resultVariable =  new HumanCaseInfo (j0);
                return resultVariable;
                
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public VetCaseInfo GetVetCase(String id){
        return GetVetCase(id,null);
    }


    public VetCaseInfo GetVetCase(String id,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetVetCase");
        soapEnvelope.addMapping("http://bv.com/eidss","VetCaseInfo",new VetCaseInfo().getClass());
        soapReq.addProperty("id",id);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetVetCase", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetVetCase", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            if (result.hasProperty("GetVetCaseResult"))
            {
                SoapObject j1 = (SoapObject)result.getProperty("GetVetCaseResult");
                VetCaseInfo resultVariable =  new VetCaseInfo (j1);
                return resultVariable;
                
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public String CreateHumanCase(HumanCaseInfo hc){
        return CreateHumanCase(hc,null);
    }


    public String CreateHumanCase(HumanCaseInfo hc,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","CreateHumanCase");
        soapEnvelope.addMapping("http://bv.com/eidss","hc",new HumanCaseInfo().getClass());
        soapReq.addProperty("hc",hc);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/CreateHumanCase", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/CreateHumanCase", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            if (result.hasProperty("CreateHumanCaseResult"))
            {
                Object obj = result.getProperty("CreateHumanCaseResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                    SoapPrimitive j2 =(SoapPrimitive) result.getProperty("CreateHumanCaseResult");
                    String resultVariable = j2.toString();
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public void EditHumanCase(HumanCaseInfo hc){
        EditHumanCase(hc,null);
    }


    public void EditHumanCase(HumanCaseInfo hc,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","EditHumanCase");
        soapEnvelope.addMapping("http://bv.com/eidss","hc",new HumanCaseInfo().getClass());
        soapReq.addProperty("hc",hc);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/EditHumanCase", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/EditHumanCase", soapEnvelope);
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public VectorSampleInfo GetSampleList(SampleInfo filter){
        return GetSampleList(filter,null);
    }


    public VectorSampleInfo GetSampleList(SampleInfo filter,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetSampleList");
        soapEnvelope.addMapping("http://bv.com/eidss","SampleInfo[]",new VectorSampleInfo().getClass());
        soapEnvelope.addMapping("http://bv.com/eidss","filter",new SampleInfo().getClass());
        soapReq.addProperty("filter",filter);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetSampleList", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetSampleList", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("GetSampleListResult");
            VectorSampleInfo GetSampleListResult = new VectorSampleInfo(soapObject);
            return GetSampleListResult;
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public VectorTestInfo GetTestList(TestInfo filter){
        return GetTestList(filter,null);
    }


    public VectorTestInfo GetTestList(TestInfo filter,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","GetTestList");
        soapEnvelope.addMapping("http://bv.com/eidss","TestInfo[]",new VectorTestInfo().getClass());
        soapEnvelope.addMapping("http://bv.com/eidss","filter",new TestInfo().getClass());
        soapReq.addProperty("filter",filter);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/GetTestList", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/GetTestList", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("GetTestListResult");
            VectorTestInfo GetTestListResult = new VectorTestInfo(soapObject);
            return GetTestListResult;
        }catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public void Login(String Organization,String User,String Password,String Language){
        Login(Organization,User,Password,Language,null);
    }


    public void Login(String Organization,String User,String Password,String Language,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","Login");
        soapReq.addProperty("Organization",Organization);
        soapReq.addProperty("User",User);
        soapReq.addProperty("Password",Password);
        soapReq.addProperty("Language",Language);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/Login", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/Login", soapEnvelope);
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
    }
    */
    
/*
    public boolean SaveHumanCases(String Organization,String User,String Password,String Language,VectorHumanCaseInfo hc_in,HumanCaseInfo[]& hc_out){
        return SaveHumanCases(Organization,User,Password,Language,hc_in,hc_out,null);
    }


    public boolean SaveHumanCases(String Organization,String User,String Password,String Language,VectorHumanCaseInfo hc_in,HumanCaseInfo[]& hc_out,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","SaveHumanCases");
        soapReq.addProperty("Organization",Organization);
        soapReq.addProperty("User",User);
        soapReq.addProperty("Password",Password);
        soapReq.addProperty("Language",Language);
        soapEnvelope.addMapping("http://bv.com/eidss","hc_in",new VectorHumanCaseInfo().getClass());
        soapReq.addProperty("hc_in",hc_in);
        soapEnvelope.addMapping("http://bv.com/eidss","hc_out",new HumanCaseInfo[]&().getClass());
        soapReq.addProperty("hc_out",hc_out);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/SaveHumanCases", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/SaveHumanCases", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            if (result.hasProperty("SaveHumanCasesResult"))
            {
                Object obj = result.getProperty("SaveHumanCasesResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                    SoapPrimitive j3 =(SoapPrimitive) result.getProperty("SaveHumanCasesResult");
                    boolean resultVariable = Boolean.parseBoolean(j3.toString());
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
    
    public boolean LoadReferences(String Organization,String User,String Password,VectorInt64 types,VectorString langs,BaseReferenceRaw[]& refs,BaseReferenceTranslationRaw[]& refs_trans,GisBaseReferenceRaw[]& gis_refs,GisBaseReferenceTranslationRaw[]& gis_refs_trans){
        return LoadReferences(Organization,User,Password,types,langs,refs,refs_trans,gis_refs,gis_refs_trans,null);
    }


    public boolean LoadReferences(String Organization,String User,String Password,VectorInt64 types,VectorString langs,BaseReferenceRaw[]& refs,BaseReferenceTranslationRaw[]& refs_trans,GisBaseReferenceRaw[]& gis_refs,GisBaseReferenceTranslationRaw[]& gis_refs_trans,List<HeaderProperty> headers){
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","LoadReferences");
        soapReq.addProperty("Organization",Organization);
        soapReq.addProperty("User",User);
        soapReq.addProperty("Password",Password);
        soapEnvelope.addMapping("http://bv.com/eidss","types",new VectorInt64().getClass());
        soapReq.addProperty("types",types);
        soapEnvelope.addMapping("http://bv.com/eidss","langs",new VectorString().getClass());
        soapReq.addProperty("langs",langs);
        soapEnvelope.addMapping("http://bv.com/eidss","refs",new BaseReferenceRaw[]&().getClass());
        soapReq.addProperty("refs",refs);
        soapEnvelope.addMapping("http://bv.com/eidss","refs_trans",new BaseReferenceTranslationRaw[]&().getClass());
        soapReq.addProperty("refs_trans",refs_trans);
        soapEnvelope.addMapping("http://bv.com/eidss","gis_refs",new GisBaseReferenceRaw[]&().getClass());
        soapReq.addProperty("gis_refs",gis_refs);
        soapEnvelope.addMapping("http://bv.com/eidss","gis_refs_trans",new GisBaseReferenceTranslationRaw[]&().getClass());
        soapReq.addProperty("gis_refs_trans",gis_refs_trans);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/LoadReferences", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/LoadReferences", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            if (result.hasProperty("LoadReferencesResult"))
            {
                Object obj = result.getProperty("LoadReferencesResult");
                if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                    SoapPrimitive j4 =(SoapPrimitive) result.getProperty("LoadReferencesResult");
                    boolean resultVariable = Boolean.parseBoolean(j4.toString());
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
*/
    
    public VectorHumanCaseInfo SaveHumanCases2(String Organization,String User,String Password,String Language,VectorHumanCaseInfo hc_in) throws Exception{
        return SaveHumanCases2(Organization,User,Password,Language,hc_in,null);
    }


    public VectorHumanCaseInfo SaveHumanCases2(String Organization,String User,String Password,String Language,VectorHumanCaseInfo hc_in,List<HeaderProperty> headers) throws Exception{
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","SaveHumanCases2");
        soapEnvelope.addMapping("http://bv.com/eidss","HumanCaseInfo[]",new VectorHumanCaseInfo().getClass());
        soapReq.addProperty("Organization",Organization);
        soapReq.addProperty("User",User);
        soapReq.addProperty("Password",Password);
        soapReq.addProperty("Language",Language);
        soapEnvelope.addMapping("http://bv.com/eidss","hc_in",new VectorHumanCaseInfo().getClass());
        soapReq.addProperty("hc_in",hc_in);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        Transport httpTransport = getTransport(url);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/SaveHumanCases2", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/SaveHumanCases2", soapEnvelope);
            }
            //SoapFault fault=(SoapFault)soapEnvelope.bodyIn;
            if (soapEnvelope.bodyIn.getClass().getName().endsWith("SoapFault")){
            	throw (SoapFault)soapEnvelope.bodyIn;
            }
            
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            if (result.getPropertySafely("SaveHumanCases2Result").getClass().getName().endsWith("SoapFault")){
            	throw (SoapFault)result.getPropertySafely("SaveHumanCases2Result");
            }

            SoapObject soapObject =(SoapObject) result.getPropertySafely("SaveHumanCases2Result");
            VectorHumanCaseInfo SaveHumanCases2Result = new VectorHumanCaseInfo(soapObject);
            return SaveHumanCases2Result;
        }catch (SoapFault f) {
            throw f;
        }
        catch (Exception e) {
        	throw e;
            //e.printStackTrace();
        }
    }
    
    
    
    public VectorBaseReferenceRaw LoadReference(String Organization,String User,String Password,long type) throws Exception{
        return LoadReference(Organization,User,Password,type,null);
    }


    
    public VectorBaseReferenceRaw LoadReference(String Organization,String User,String Password,long type,List<HeaderProperty> headers) throws Exception{
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER10);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","LoadReference");
        soapEnvelope.addMapping("http://bv.com/eidss","BaseReferenceRaw[]",new VectorBaseReferenceRaw().getClass());
        soapReq.addProperty("Organization",Organization);
        soapReq.addProperty("User",User);
        soapReq.addProperty("Password",Password);
        soapReq.addProperty("type",type);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        Transport httpTransport = getTransport(url);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/LoadReference", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/LoadReference", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("LoadReferenceResult");
            VectorBaseReferenceRaw LoadReferenceResult = new VectorBaseReferenceRaw(soapObject);
            return LoadReferenceResult;
        }catch (Exception e) {
            e.printStackTrace();
            throw e;
        }
    }
    
    
    public VectorBaseReferenceTranslationRaw LoadReferenceTranslation(String Organization,String User,String Password,long type,String lang) throws Exception{
        return LoadReferenceTranslation(Organization,User,Password,type,lang,null);
    }


    public VectorBaseReferenceTranslationRaw LoadReferenceTranslation(String Organization,String User,String Password,long type,String lang,List<HeaderProperty> headers) throws Exception{
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","LoadReferenceTranslation");
        soapEnvelope.addMapping("http://bv.com/eidss","BaseReferenceTranslationRaw[]",new VectorBaseReferenceTranslationRaw().getClass());
        soapReq.addProperty("Organization",Organization);
        soapReq.addProperty("User",User);
        soapReq.addProperty("Password",Password);
        soapReq.addProperty("type",type);
        soapReq.addProperty("lang",lang);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        Transport httpTransport = getTransport(url);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/LoadReferenceTranslation", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/LoadReferenceTranslation", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("LoadReferenceTranslationResult");
            VectorBaseReferenceTranslationRaw LoadReferenceTranslationResult = new VectorBaseReferenceTranslationRaw(soapObject);
            return LoadReferenceTranslationResult;
        }catch (Exception e) {
            e.printStackTrace();
            throw e;
        }
    }
    
    public VectorGisBaseReferenceRaw LoadGisReference(String Organization,String User,String Password) throws Exception{
        return LoadGisReference(Organization,User,Password,null);
    }


    public VectorGisBaseReferenceRaw LoadGisReference(String Organization,String User,String Password,List<HeaderProperty> headers) throws Exception{
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","LoadGisReference");
        soapEnvelope.addMapping("http://bv.com/eidss","GisBaseReferenceRaw[]",new VectorGisBaseReferenceRaw().getClass());
        soapReq.addProperty("Organization",Organization);
        soapReq.addProperty("User",User);
        soapReq.addProperty("Password",Password);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        Transport httpTransport = getTransport(url);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/LoadGisReference", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/LoadGisReference", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("LoadGisReferenceResult");
            VectorGisBaseReferenceRaw LoadGisReferenceResult = new VectorGisBaseReferenceRaw(soapObject);
            return LoadGisReferenceResult;
        }catch (Exception e) {
            e.printStackTrace();
            throw e;
        }
    }
    
    public VectorGisBaseReferenceTranslationRaw LoadGisReferenceTranslation(String Organization,String User,String Password,String lang) throws Exception{
        return LoadGisReferenceTranslation(Organization,User,Password,lang,null);
    }


    public VectorGisBaseReferenceTranslationRaw LoadGisReferenceTranslation(String Organization,String User,String Password,String lang,List<HeaderProperty> headers) throws Exception{
    
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://bv.com/eidss","LoadGisReferenceTranslation");
        soapEnvelope.addMapping("http://bv.com/eidss","GisBaseReferenceTranslationRaw[]",new VectorGisBaseReferenceTranslationRaw().getClass());
        soapReq.addProperty("Organization",Organization);
        soapReq.addProperty("User",User);
        soapReq.addProperty("Password",Password);
        soapReq.addProperty("lang",lang);
        
        
        soapEnvelope.setOutputSoapObject(soapReq);
        Transport httpTransport = getTransport(url);
        try{
            
            if (headers!=null){
                httpTransport.call("http://bv.com/eidss/LoadGisReferenceTranslation", soapEnvelope,headers);
            }else{
                httpTransport.call("http://bv.com/eidss/LoadGisReferenceTranslation", soapEnvelope);
            }
            SoapObject result=(SoapObject)soapEnvelope.bodyIn;
            SoapObject soapObject =(SoapObject) result.getPropertySafely("LoadGisReferenceTranslationResult");
            VectorGisBaseReferenceTranslationRaw LoadGisReferenceTranslationResult = new VectorGisBaseReferenceTranslationRaw(soapObject);
            return LoadGisReferenceTranslationResult;
        }catch (Exception e) {
            e.printStackTrace();
            throw e;
        }
    }
}
