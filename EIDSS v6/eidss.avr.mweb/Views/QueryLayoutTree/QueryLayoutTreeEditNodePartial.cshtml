@using bv.model.Model.Core
@using eidss.model.Avr.Tree
@using eidss.web.common.Utils
@model AvrTreeElement

<div class="edit_form">
    @{
        long cQueryId = 0;

        if (Request.Cookies["queryId"] != null)
        {
            //TODO это выделенный узел на самом деле. Изменить в TreeList.js
            cQueryId = Convert.ToInt64(Request.Cookies["queryId"].Value);
            if (Model.QueryID == 0)
            {
                var tree = Session["QueryTree"] as List<AvrTreeElement>;
                if (tree != null)
                {
                    var parent = tree.FirstOrDefault(c => c.ID == cQueryId);
                    if (parent != null)
                    {
                        cQueryId = parent.QueryID;
                    }
                }
            }
        } 
        var queryId = Model.QueryID > 0 ? Model.QueryID : cQueryId;
        var globalId = Model.GlobalID.HasValue ? Model.GlobalID.Value : 0;

        var CanUpdate = eidss.model.Core.AvrPermissions.UpdatePermission;
    }
    
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.ElementType)
    @Html.Hidden("QueryID", queryId)
    @Html.HiddenFor(m => m.ReadOnly)
    @Html.Hidden("GlobalID", globalId)
    @Html.HiddenFor(m => m.DescriptionID)

    @{
        //TODO от куки здесь избавляемся?
        var isLayout = Model.IsLayout || (Request.Cookies["newElementType"] != null && "layout".Equals(Request.Cookies["newElementType"].Value));
        var defaultName = isLayout ? Translator.GetString("LayoutNameEnglish") : Translator.GetString("FolderNameEnglish");
        var nationalName = isLayout ? Translator.GetString("LayoutNameNational") : Translator.GetString("FolderNameNational");
        var descrDef = Translator.GetString("DescriptionEnglish");
        var descrNat = Translator.GetString("DescriptionNational");
        var shareName = Translator.GetString("ShareLayout");
        var publishName = isLayout ? Translator.GetString("PublishLayout") : Translator.GetString("PublishFolder");
     }
        
<table class="level1">
    <tr>
        <td class="firstLabel large">@defaultName</td>
            @if (CanUpdate)
            {
        <td class="wide">@Html.TextBoxFor(m => m.DefaultName, new Dictionary<string, object> {{"class", "requiredField wide"}})</td>
            }else{
        <td class="wide">@Html.TextBoxFor(m => m.DefaultName, new Dictionary<string, object> {{"class", "wide"}, {"readonly", "true"}})</td>
            }
        <td></td>
    </tr>
    @if (ModelUserContext.CurrentLanguage != "en")
    {
        <tr>
            <td class="firstLabel large">@nationalName</td>
            @if (CanUpdate)
            {
            <td class="wide">@Html.TextBoxFor(m => m.NationalName, new Dictionary<string, object> {{"class", "requiredField wide"}})</td>
            }else{
            <td class="wide">@Html.TextBoxFor(m => m.NationalName, new Dictionary<string, object> {{"class", "wide"}, {"readonly", "true"}})</td>
            }
            <td></td>
        </tr>
    }
    
    @if (isLayout)
    {
        <tr>
            <td class="firstLabel large">@descrDef</td>
            @if (CanUpdate)
            {
            <td class="wide">@Html.TextAreaFor(m => m.DescriptionEnglish,new {@class="wide"})</td>
            }else{
            <td class="wide">@Html.TextAreaFor(m => m.DescriptionEnglish,new Dictionary<string, object> {{"class", "wide"}, {"readonly", "true"}})</td>
            }
            <td></td>
        </tr>
        if (ModelUserContext.CurrentLanguage != "en")
        {
            <tr>
                <td class="firstLabel large">@descrNat</td>
            @if (CanUpdate)
            {
                <td class="wide">@Html.TextAreaFor(m => m.Description,new {@class="wide"})</td>
            }else{
                <td class="wide">@Html.TextAreaFor(m => m.Description,new Dictionary<string, object> {{"class", "wide"}, {"readonly", "true"}})</td>
            }
             <td></td>
           </tr>
        }
    }
            
    <tr>
        @if (isLayout)
        {
            if (CanUpdate){
            <td class="firstLabel large">@Html.EditorFor(m => m.IsShared)&nbsp;@shareName</td>
            }else{
            <td class="firstLabel large">@Html.DisplayFor(m => m.IsShared)&nbsp;@shareName</td>
            }
        }
        else
        {
            <td class="firstLabel large"></td>
        }
            @if (CanUpdate && eidss.model.Core.AvrPermissions.AccessToAVRAdministrationPermission)
            {
        <td class="wide">@Html.EditorFor(m => m.IsPublished)&nbsp;@publishName</td>
            }else{
        <td class="wide" >@Html.DisplayFor(m => m.IsPublished)&nbsp;@publishName</td>
            }
        <td></td>
    </tr>
    <tr>
@*        <td class="firstLabel"></td>
        <td class="wide"></td>*@
        <td colspan="3" style="text-align: right;">
            @if (CanUpdate)
            {
    @Html.DevExpress().Button(
        edtSettings => {
                           edtSettings.Name = "hlUpdate";
                           edtSettings.Text = Translator.GetBvMessageString("strSave_Id");
                           edtSettings.Styles.Style.CssClass = "button";
                           edtSettings.ClientSideEvents.Click = "function(s, e) { queryTreeList.EditNode(s, e); }";
        }
         ).GetHtml()
    @Html.DevExpress().Button(
        edtSettings => {
                           edtSettings.Name = "hlCancel";
                           edtSettings.Text = Translator.GetBvMessageString("strCancel_Id");
                           edtSettings.Styles.Style.CssClass = "button";
                           edtSettings.ClientSideEvents.Click = "function(s, e) { treeList.CancelEdit(); }";
        }
         ).GetHtml()
            }else{
    @Html.DevExpress().Button(
        edtSettings => {
                           edtSettings.Name = "hlCancel";
                           edtSettings.Text = Translator.GetBvMessageString("strOK_Id");
                           edtSettings.Styles.Style.CssClass = "button";
                           edtSettings.ClientSideEvents.Click = "function(s, e) { treeList.CancelEdit(); }";
        }
         ).GetHtml()
            }
            
        </td>
    </tr>

</table>
</div>
