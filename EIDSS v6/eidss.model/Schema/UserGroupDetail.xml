<?xml version="1.0" encoding="utf-8" ?>
<object name="UserGroupDetail"
        connection="EidssConnectionString"
        generator="ObjectGenerator.xslt"
        xmlns="urn:schemas-bv:objectmodel">

	<storage>
    <get />		
	</storage>
	<tables>
		<table name="UserGroupDetail">
      <properties auditObject="daoUserGroup" auditTable="tlbEmployeeGroup" permissionObject="UserGroup" />
      <help win="User_Groups"/>

      <fields>
        <calculated name="ObjectAccessListFiltered" type="EditableList&lt;ObjectAccess&gt;" depends="idfsOASite" lambda="c => new EditableList&lt;ObjectAccess&gt;(c.ObjectAccessList.Where(m => m.idfsSite == idfsOASite).ToList())"/>
        <storage name="idfsOASite" type="long?"/>
      </fields>
      <readonly>
        <fields name="Site" predicate="c => !EidssUserContext.User.HasPermission(PermissionHelper.ExecutePermission(EIDSSPermissionObject.ManageRightsRemotely))" />
      </readonly>
      <relations>
        <relation name="UserGroupMemberList" table="UserGroupMember" internal="false" type="child" source="idfEmployeeGroup" target="idfEmployeeGroup" lazy="false" />
        <relation name="ObjectAccessList" table="ObjectAccess" internal="false" type="child" source="idfEmployeeGroup" target="idfEmployee" lazy="false" />
      </relations>
      <lookups>
        <lookup name="Site" table="SiteLookup" source="idfsOASite" target="idfsSite"/>
      </lookups>
      <postorder>        
        <item name="this"/>
        <item name="UserGroupMemberList"/>
        <item name="ObjectAccessList"/>
      </postorder>
      <deleteorder>
        <item name="ObjectAccessList"/>
        <item name="UserGroupMemberList"/>
        <item name="this"/>      
      </deleteorder>
      <extenders>
        <creating>
          <scalar_extender target="idfEmployeeGroup" class="GetNewIDExtender" />
          <scalar_extender target="idfsEmployeeGroupName" class="GetNewIDExtender" />
        </creating>
        <created>
          <value_extender target="Site" value="obj.SiteLookup.FirstOrDefault(s => s.idfsSite == EidssSiteContext.Instance.SiteID);"/>
          <custom_extender>
            <text>
              _LoadObjectAccessList(manager, obj);
            </text>
          </custom_extender>
        </created>
        <loaded>
          <value_extender target="Site" value="obj.SiteLookup.FirstOrDefault(s => s.idfsSite == EidssSiteContext.Instance.SiteID);"/>
        </loaded>
      </extenders>
      <handlers>
        <fieldhandler>
          <value_handler field="Site" target="idfsSite" value="obj.Site.idfsSite"/>
        </fieldhandler>
      </handlers> 
      <validators>
        <post>
          <required_validator target="strGroupName" field="GroupName" />
          <required_validator target="idfsSite" field="Site" />
        </post>
      </validators>
      <storage>
        <post />
        <delete />
      </storage>
      <actions>
        <standard>
          <remove type="Create"/>
          <remove type="Edit"/>
          <remove type="Delete"/>
        </standard>       
      </actions>            
		</table>
	</tables>

</object>