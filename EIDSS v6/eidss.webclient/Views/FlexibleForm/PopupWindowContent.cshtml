@using eidss.web.common.Utils
@model eidss.model.Schema.FFPresenterModel
    
      
@if ((Model != null) && (Model.TemplateFlexNode != null))
{
    <div class="popupContent">
        @using (Html.BeginForm())
        {
            if (ViewBag.IsClearCopyPasteButtonsVisible != null && ViewBag.IsClearCopyPasteButtonsVisible)
            {
                <div class="windowButtonsPn windowButtonsLeftPn">
                    <input type="button" class="windowButton" onclick="flexForms.onClearClick('@ViewBag.RootItemId', '@Model.CurrentObservation')" value="@Translator.GetMessageString("Clear")"/>                        
                    <input type="button" class="windowButton" onclick="flexForms.onCopyClick('@ViewBag.RootItemId', '@Model.CurrentObservation')" value="@Translator.GetMessageString("strCopy_Id")"/>        
                    <input type="button" class="windowButton" onclick="flexForms.onPasteClick('@ViewBag.RootItemId', '@Model.CurrentObservation')" value="@Translator.GetMessageString("Paste")"/>        
                </div>
            }
            <div class="windowButtonsPn">
                <input type="button" class="windowButton" onclick="flexForms.saveAndClosePopUp('@ViewBag.GridName')" value="@Translator.GetMessageString("Ok")"/>                        
                <input type="button" class="windowButton" onclick="bvPopup.closeDefaultPopup()" value="@Translator.GetMessageString("Cancel")"/>        
            </div>
            if (ViewBag.IsClearCopyPasteButtonsVisible == null || !ViewBag.IsClearCopyPasteButtonsVisible)
            {
                <div class="windowSeparator"></div>
            }

            <div id="FFContainer">
                @if (!Model.TemplateFlexNode.ChildList.Any())
                {
                    @Html.Partial("Empty")
                }
                @foreach (var node in Model.TemplateFlexNode.ChildList)
                {
                    @Html.Partial("FlexNode", node)
                }
                @{ Model.ActivityParameters.AcceptChanges(); }
            </div>
        }
    </div>
}