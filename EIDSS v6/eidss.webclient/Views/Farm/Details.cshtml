@model eidss.model.Schema.FarmRoot
@{
    ViewBag.Title = @Translator.GetMessageString("frmFarm");
    ViewBag.Number = "V05";
    Layout = "~/Views/Shared/_DetailsLayout.cshtml";
}
@using Kendo.Mvc.UI
@using bv.common.Configuration
@using bv.model.Model.Core
@using eidss.web.common.Utils
@using eidss.webclient.Utils;

<script src='@Url.Content("~/Scripts/EIDSS/BvCheckedComboBox.js")' type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/EIDSS/GeoLocation.js")" type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/EIDSS/Person.js")' type="text/javascript"></script>

@if (BaseSettings.TranslationMode){
    <input type='hidden' id='aspclassname' value='@GetType().FullName' />
}
@using (Html.BeginForm())
{
    @Html.IdentificationAndHeartbeat("idfFarm", Model.idfFarm)	  
    
    <div class="summary">
        <table class="level1"> 
            <tr>                                                               
                <td class="xmedium firstLabel2">
                    @Html.LabelFor(m => m.datModificationDate)
                </td>
                <td class="medium">
                    @Html.BvEditbox(Model, m => m.datModificationDate)
                </td>
                <td class="label">
                </td>
                <td class="medium">
                </td>
                <td class="label">
                </td>
                <td class="medium">
                </td>
            </tr>
        </table> 
    </div>
    

    <div class="tabPanelContent bordered">
        <div class="sectionTitle">
            @Translator.GetMessageString("titleFarmContactInformation")  
        </div>
        <table class="level1">
            <tr>
                <td class="xmedium firstLabel">
                    @Html.LabelFor(m => m.intHACode)
                </td>
                <td class="medium">
                    @Html.BvComboboxWithCheckboxes(Model, m => m.HACode, "intHACode", "CodeName", Model.HACodeLookup.ToList().Aggregate("", (r, c) => Model.intHACode.HasValue && (c.intHACode & Model.intHACode.Value) != 0 ? (r == "" ? c.intHACode.ToString() : r + "," + c.intHACode.ToString()) : r))
                </td>
                <td class="xmedium label">
                    @Html.LabelFor(m => m.strFarmCode)
                </td>
                <td class="medium">
                    @Html.BvEditbox(Model, m => m.strFarmCode)
                </td>
                <td class="xmedium label">
                    @Html.LabelFor(m => m.strNationalName)
                </td>
                <td class="medium">
                    @Html.BvEditbox(Model, m => m.strNationalName)
                </td>
            </tr>
            <tr>
                <td class="firstLabel">
                    @Html.LabelFor(m => m.strOwnerLastName)
                </td>
                <td>
                    @Html.Action("InlinePersonPicker", "Person", new { obj = Model, objectId = Model.idfFarm, idfsPatientPropertyName = "idfOwner", strPatientPropertyName = "strOwnerLastName"})
                </td>
                <td class="label">
                </td>
                <td>
                    @Html.BvEditbox(Model, m => m.strOwnerFirstName)
                </td>
                <td class="label">
                </td>
                <td>
                    @Html.BvEditbox(Model, m => m.strOwnerMiddleName)
                </td>
            </tr>
            <tr>
                <td class="firstLabel">
                    @Html.LabelFor(m => m.strContactPhone)
                </td>
                <td>
                    @Html.BvEditbox(Model, m => m.strContactPhone)
                </td>
                <td class="label">
                    @Html.LabelFor(m => m.strFax)
                </td>
                <td>
                    @Html.BvEditbox(Model, m => m.strFax)
                </td>
                <td class="label">
                    @Html.LabelFor(m => m.strEmail)
                </td>
                <td>
                    @Html.BvEditbox(Model, m => m.strEmail)
                </td>
            </tr>
        </table>
        
@Html.Address(Model.idfFarm, Model.Address, true, false, true, true)

    </div>
    
}
